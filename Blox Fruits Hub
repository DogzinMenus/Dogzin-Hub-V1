local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("DogzinHub V1 - Funcional", "Ocean")

local mainGui = game:GetService("CoreGui"):WaitForChild("KavoUI") or game.Players.LocalPlayer.PlayerGui:WaitForChild("KavoUI")
local mainFrame = mainGui:FindFirstChildWhichIsA("Frame", true)

-- Torna arrastável
mainFrame.Active = true
mainFrame.Draggable = true

-- Criar botão minimizar
local minimizeButton = Instance.new("TextButton")
minimizeButton.Parent = mainFrame
minimizeButton.Text = "-"
minimizeButton.Size = UDim2.new(0, 30, 0, 30)
minimizeButton.Position = UDim2.new(1, -35, 0, 5)
minimizeButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
minimizeButton.TextColor3 = Color3.new(1,1,1)
minimizeButton.Font = Enum.Font.SourceSansBold
minimizeButton.TextScaled = true
minimizeButton.AutoButtonColor = true

local isMinimized = false

minimizeButton.MouseButton1Click:Connect(function()
    if isMinimized then
        -- Restaurar tamanho e mostrar filhos
        mainFrame.Size = UDim2.new(0, 400, 0, 400)
        for _, child in pairs(mainFrame:GetChildren()) do
            if child ~= minimizeButton then
                child.Visible = true
            end
        end
        isMinimized = false
    else
        -- Minimizar: esconder filhos (menos botão) e diminuir tamanho
        for _, child in pairs(mainFrame:GetChildren()) do
            if child ~= minimizeButton then
                child.Visible = false
            end
        end
        mainFrame.Size = UDim2.new(0, 100, 0, 40)
        minimizeButton.Visible = true -- botão fica visível
        isMinimized = true
    end
end)
