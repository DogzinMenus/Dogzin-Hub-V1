-- Carregar Kavo UI
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("DogzinHub V1 - Blox Fruits", "Ocean")

local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Criar botão toggle
local toggleButton = Instance.new("ImageButton")
toggleButton.Name = "ToggleDogzinHub"
toggleButton.Size = UDim2.new(0, 50, 0, 50)
toggleButton.Position = UDim2.new(0, 10, 0, 10)
toggleButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
toggleButton.Image = "rbxassetid://7072719734" -- Ícone personalizável
toggleButton.ImageColor3 = Color3.new(1, 1, 1)
toggleButton.Parent = playerGui
toggleButton.AutoButtonColor = false
toggleButton.BorderSizePixel = 0

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Esperar tela do Kavo aparecer
local kavoScreenGui
repeat
    for _, gui in pairs(playerGui:GetChildren()) do
        if gui:IsA("ScreenGui") and gui.Name == "Kavo-UI-Library" then
            kavoScreenGui = gui
            break
        end
    end
    wait()
until kavoScreenGui

local mainFrame = kavoScreenGui:FindFirstChildWhichIsA("Frame")
if not mainFrame then
    warn("Frame principal do Kavo UI não encontrado.")
    return
end

-- Criar a barra de arrasto (drag bar)
local dragBar = Instance.new("Frame")
dragBar.Name = "DragBar"
dragBar.Size = UDim2.new(1, 0, 0, 25)
dragBar.Position = UDim2.new(0, 0, 0, 0)
dragBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
dragBar.BorderSizePixel = 0
dragBar.Parent = mainFrame

-- Deixar dragBar sempre na frente
dragBar.ZIndex = 1000

-- Drag pela barra
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    mainFrame.Position = UDim2.new(
        startPos.X.Scale,
        startPos.X.Offset + delta.X,
        startPos.Y.Scale,
        startPos.Y.Offset + delta.Y
    )
end

dragBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

dragBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        update(input)
    end
end)

-- Toggle do Frame
local isOpen = true
mainFrame.Visible = true

local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

local function toggleUI()
    isOpen = not isOpen
    if isOpen then
        mainFrame.Visible = true
        mainFrame.ClipsDescendants = false
        local tween = TweenService:Create(mainFrame, tweenInfo, {BackgroundTransparency = 0})
        tween:Play()
    else
        local tween = TweenService:Create(mainFrame, tweenInfo, {BackgroundTransparency = 1})
        tween:Play()
        tween.Completed:Connect(function()
            mainFrame.Visible = false
        end)
    end

    local targetColor = isOpen and Color3.fromRGB(70, 70, 70) or Color3.fromRGB(40, 40, 40)
    TweenService:Create(toggleButton, tweenInfo, {BackgroundColor3 = targetColor}):Play()
end

toggleButton.MouseButton1Click:Connect(toggleUI)

-- Exemplo de aba e toggle (seu conteúdo vem aqui)
local TabMain = Window:NewTab("Main")
TabMain:NewToggle("Ativar Fast Attack", "Ativa ataques rápidos", function(v)
    _G.FastAttack = v
    while _G.FastAttack do
        -- Seu código aqui
        wait()
    end
end)
