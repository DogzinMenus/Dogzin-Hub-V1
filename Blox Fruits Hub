local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Criar ScreenGui pai
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "DogzinHubGui"
screenGui.Parent = playerGui
screenGui.ResetOnSpawn = false

-- Botão para toggle abrir/fechar
local toggleButton = Instance.new("ImageButton")
toggleButton.Name = "ToggleButton"
toggleButton.Parent = screenGui
toggleButton.Size = UDim2.new(0, 50, 0, 50)
toggleButton.Position = UDim2.new(0, 10, 0, 10)
toggleButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
toggleButton.Image = "rbxassetid://7072719734"  -- Troque para o ícone que quiser
toggleButton.ImageColor3 = Color3.new(1, 1, 1)
toggleButton.AutoButtonColor = true

-- Frame principal onde a Kavo UI vai ficar (com rolagem)
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Parent = screenGui
mainFrame.Size = UDim2.new(0, 400, 0, 500)
mainFrame.Position = UDim2.new(0, 70, 0, 10)
mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
mainFrame.BorderSizePixel = 0
mainFrame.Visible = false -- inicia escondido

local scrollingFrame = Instance.new("ScrollingFrame")
scrollingFrame.Name = "ScrollingFrame"
scrollingFrame.Parent = mainFrame
scrollingFrame.Size = UDim2.new(1, 0, 1, 0)
scrollingFrame.CanvasSize = UDim2.new(0, 0, 2, 0) -- Altura do conteúdo para rolagem
scrollingFrame.ScrollBarThickness = 8
scrollingFrame.BackgroundTransparency = 1

-- CRIAR a UI da Kavo LIB dentro do ScrollingFrame

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()

-- IMPORTANTÍSSIMO: A Kavo UI cria a Window como uma ScreenGui no PlayerGui por padrão.
-- Aqui, vamos forçar ela a ser filha do scrollingFrame para entrar dentro do nosso frame rolável.

local Window = Library.CreateLib("DogzinHub V1 - Blox Fruits", "Ocean")

-- Depois que criar a Window, pegar o ScreenGui da Kavo UI e colocar dentro do scrollingFrame
-- (supondo que a Window possui uma ScreenGui pai)

-- Encontrar o ScreenGui criado pela Kavo
local kavoScreenGui
for _, gui in pairs(playerGui:GetChildren()) do
    if gui:IsA("ScreenGui") and gui.Name == "Kavo-UI-Library" then
        kavoScreenGui = gui
        break
    end
end

if kavoScreenGui then
    kavoScreenGui.Parent = scrollingFrame
    -- Ajustar posição para ficar dentro do scrollingFrame
    kavoScreenGui.ResetOnSpawn = false
    kavoScreenGui.Enabled = true
    kavoScreenGui.DisplayOrder = 10

    -- Ajustar propriedades da Kavo UI pra se encaixar no scrollingFrame
    kavoScreenGui.IgnoreGuiInset = true

    -- Reduzir tamanho da janela da Kavo UI para caber dentro do scrollingFrame
    local mainWindow = kavoScreenGui:FindFirstChildWhichIsA("Frame")
    if mainWindow then
        mainWindow.Size = UDim2.new(1, 0, 1, 0)
        mainWindow.Position = UDim2.new(0, 0, 0, 0)
        mainWindow.ClipsDescendants = false
    end
end

-- Toggle abrir/fechar
local frameOpen = false
toggleButton.MouseButton1Click:Connect(function()
    frameOpen = not frameOpen
    mainFrame.Visible = frameOpen
    -- Muda cor para indicar aberto/fechado
    if frameOpen then
        toggleButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    else
        toggleButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    end
end)

-- Criar suas abas e toggles normalmente, por exemplo:

local TabMain = Window:NewTab("Main")
TabMain:NewToggle("Ativar Fast Attack", "Ativa ataques rápidos", function(v)
    _G.FastAttack = v
    while _G.FastAttack do
        -- Seu código aqui
        wait()
    end
end)

-- Repita seu código normalmente para criar o resto das abas etc.
